{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.module.css","components/Container/Container.jsx","components/Title/Title.jsx","components/ContactForm/ContactForm.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","children","className","s","container","Title","title","level","TagNameTitle","ContactForm","state","name","number","inputNameId","shortid","generate","inputNumberId","handleSubmit","e","preventDefault","props","onSubmit","reset","setState","handlerChange","currentTarget","value","form","this","label","htmlFor","input","type","id","onChange","button","Component","Filter","inputFilterId","filterWrapper","ContactList","contacts","onDeleteContact","contactList","map","listItem","text","onClick","App","filter","addContact","contact","find","alert","deleteContact","contactId","prevState","changeFilter","console","log","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c5cbc138.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__30in4\",\"label\":\"Filter_label__3Tny-\",\"input\":\"Filter_input__3QCRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2SU3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3l2l6\",\"label\":\"ContactForm_label__c5LJt\",\"input\":\"ContactForm_input__2b2IK\",\"button\":\"ContactForm_button__36y0c\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\r\n\r\nconst Title = ({ title, level = 1 }) => {\r\n  const TagNameTitle = `h${level}`;\r\n  return <TagNameTitle>{title}</TagNameTitle>;\r\n};\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\n\r\n\r\nclass ContactForm extends Component {\r\n   static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  inputNameId = shortid.generate();\r\n  inputNumberId = shortid.generate();\r\n  \r\n  handleSubmit = e => {\r\n    const { name, number } = this.state;\r\n    e.preventDefault();\r\n  \r\n    this.props.onSubmit(name, number)\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n   handlerChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n       <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <label className={s.label} htmlFor={this.inputNameId}> Name </label>\r\n          <input className={s.input} \r\n          type=\"text\" \r\n          id={this.inputNameId} \r\n          value={this.state.name} \r\n          name=\"name\" \r\n          onChange={this.handlerChange} />\r\n          <label className={s.label} htmlFor={this.inputNumberId}> Number </label>\r\n          <input className={s.input} \r\n          type=\"tel\" \r\n          id={this.inputNumberId} \r\n          value={this.state.number} \r\n          name=\"number\" \r\n          onChange={this.handlerChange} />\r\n          <button className={s.button}>Add contact</button>\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nimport shortid from 'shortid';\r\n\r\nconst Filter = ({ name, onChange }) => {\r\n  let inputFilterId = shortid.generate();\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <label className={s.label} htmlFor={inputFilterId}> Find contacts by name </label>\r\n      <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          id={inputFilterId}\r\n          value={name}\r\n          onChange={onChange}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired, \r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({contacts, onDeleteContact}) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n          {contacts.map(({ name, number, id }) => {\r\n            return (\r\n              <li className={s.listItem} key={id}>\r\n                <p className={s.text}>{name} : {number}</p>\r\n                <button className={s.button} type=\"button\" onClick={() => onDeleteContact(id)}>Delete</button>\r\n              </li>\r\n            );\r\n          })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n   contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/Container';\nimport Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n    } else if (contact.name === '') {\n      alert('Please enter your contact name!');\n    } else if (contact.number === '') {\n      alert('Please enter the contact phone number!');\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    console.log(e.currentTarget.value);\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <Container>\n        <Title title=\"Phonebook\" level={1} />\n        <ContactForm onSubmit={this.addContact}/>\n        <Title title=\"Contacts\" level={2} />\n        <Filter value={filter} onChange={this.changeFilter}/>\n        <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__qpB88\",\"listItem\":\"ContactList_listItem__tFL_V\",\"text\":\"ContactList_text__2g2kx\",\"button\":\"ContactList_button__qNlHF\"};"],"sourceRoot":""}